        /// <summary>
        /// Sample macro which provides a basic example for use with the Macro Automation tool.
        /// <para>The result simply displays which Revit ElementId's were added and/or modified during the operation.
        /// In practical use, these ElementId's can be processed to do something useful.</para>
        /// </summary>
		///  
		/// <remarks>
		/// Usage notes:
		/// <list type="bullet">
		/// <item>This is intended to be used as a Document macro.</item>
		/// <item>Macro Automation rule is expected to be named <c>Test</c>.</item>
		/// </list>
		/// </remarks>
		public void MacroAutomationSample()
        {
		    // Name of the rule within Macro Automation.
            const string MacroAutomationRuleName = "Test";

            //Begin Template
            var addedIds = Enumerable.Empty<ElementId>();
            var modifiedIds = Enumerable.Empty<ElementId>();
            
            // Extract all the added and modified id's impacted by this rule.
            var elementIdFile = System.IO.Path.Combine(System.IO.Path.GetTempPath(), string.Format("eV-{0}.txt", MacroAutomationRuleName));
            if (System.IO.File.Exists(elementIdFile))
            {
                // File contains added ids on the first line and modified on the second.
                var elementIds = System.IO.File.ReadAllText(elementIdFile).Split(new string[] { Environment.NewLine }, StringSplitOptions.None)
                    .Select(ids => ids.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries))
                    .ToArray();
                
                addedIds = elementIds[0].Select(id => new ElementId(int.Parse(id)));
                modifiedIds = elementIds[1].Select(id => new ElementId(int.Parse(id)));
            }
            //End Template
            
			
			// Do something with the results.
			// "addedIds" and "modifiedIds" variables contain the impacted model ElementIds.
			
            TaskDialog.Show("eVolve Macro Automation Sample",
                "Element Ids:" 
                + "\n Added = " + string.Join(", ", addedIds.Select(id => id.ToString()))
                + "\n Modified = " + string.Join(", ", modifiedIds.Select(id => id.ToString())),
                TaskDialogCommonButtons.Ok);
        }