        public void DeleteProjectParameters()
        {
            const string ElectricalPrefix = "eE_";
            const string MechanicalPrefix = "eM_";
            const string GenericPrefix = "eV_";
            
            var promptDialog = new TaskDialog("Delete Project Parameters");
            promptDialog.MainInstruction = "Picking an option below will result in all parameters with the prefix being deleted out of the project."
                + "\n\nBe sure you are prepared to lose ALL parameters with a matching prefix.";
            promptDialog.AddCommandLink(TaskDialogCommandLinkId.CommandLink1, string.Format("eVolve Electrical Parameters ({0})", ElectricalPrefix));
            promptDialog.AddCommandLink(TaskDialogCommandLinkId.CommandLink2, string.Format("eVolve Mechanical Parameters ({0})", MechanicalPrefix));
            promptDialog.AddCommandLink(TaskDialogCommandLinkId.CommandLink3, string.Format("eVolve Generic Parameters ({0})", GenericPrefix));
            promptDialog.CommonButtons = TaskDialogCommonButtons.Cancel;
                    
            var removePrefix = "";      
            switch (promptDialog.Show())
            {
                case TaskDialogResult.CommandLink1:
                    removePrefix = ElectricalPrefix;
                    break;
                case TaskDialogResult.CommandLink2:
                    removePrefix = MechanicalPrefix;
                    break;
                case TaskDialogResult.CommandLink3:
                    removePrefix = GenericPrefix;
                    break;
                default:
                    // User canceled.
                    return;
            }
            
            
            // Build a list of all parameters which are to be deleted.
            var definitionsToRemove = new List<Definition>();
            var iterator = Document.ParameterBindings.ForwardIterator();
            iterator.Reset();
            while (iterator.MoveNext())
            {
                var definition = iterator.Key;
                if (definition.Name.StartsWith(removePrefix))
                {
                    definitionsToRemove.Add(definition);
                }
            }
                
            if (!definitionsToRemove.Any())
            {
                TaskDialog.Show("No Project Parameters Deleted", string.Format("No {0} parameters were found.", removePrefix));
                return;
            }
            
            if (TaskDialog.Show("Confirm Project Parameter Deletion", 
                string.Format("{0} '{1}' project parameter(s) will be deleted.\n\nAre you sure you want to continue?", definitionsToRemove.Count, removePrefix),
                TaskDialogCommonButtons.Yes | TaskDialogCommonButtons.No,
                TaskDialogResult.No) != TaskDialogResult.Yes)
            {
                return;
            }
                
                
            // Attempt to remove definitions while keeping a count of those successfully removed.
            var removedDefinitionsCount = 0;
            
            using (var transaction = new Transaction(Document, string.Format("Delete {0} Project Parameters", removePrefix)))
            {
                transaction.Start();

                foreach (var definition in definitionsToRemove)
                {
                    removedDefinitionsCount += Document.ParameterBindings.Remove(definition) ? 1 : 0;
                                       
                    // Need to remove Revit's internal definition for the parameter as well.
                    // This removal isn't included in the returned count to prevent doubling up results.
                    if (definition is InternalDefinition)
                    {
                        var internalDefinition = (InternalDefinition)definition;
                        Document.Delete(internalDefinition.Id);
                    }
                }
                
                transaction.Commit();
            }
            
            TaskDialog.Show("Project Parameters Deleted",
               string.Format("Removed {0} project parameter(s) from the current document.\n\nSave your work and restart Revit.", removedDefinitionsCount),
               TaskDialogCommonButtons.Ok);
        }